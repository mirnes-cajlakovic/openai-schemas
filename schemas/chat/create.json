{
  "title": "chat/create",
  "description": "Creates a model response for the given chat conversation.",
  "type": [
    "object"
  ],
  "required": [
    "messages",
    "model"
  ],
  "properties": {
    "messages": {
      "type": [
        "array"
      ],
      "description": "A list of messages comprising the conversation so far. Example Python code.",
      "items": {
        "oneOf": [
          {
            "title": "System message",
            "type": [
              "object"
            ],
            "required": [
              "content",
              "role"
            ],
            "properties": {
              "content": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contents of the system message."
              },
              "role": {
                "type": [
                  "string"
                ],
                "description": "The role of the messages author, in this case system."
              },
              "name": {
                "type": [
                  "string"
                ],
                "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
              }
            }
          },
          {
            "title": "User message",
            "type": [
              "object"
            ],
            "required": [
              "content",
              "role"
            ],
            "properties": {
              "content": {
                "type": [
                  "string",
                  "array"
                ],
                "description": "The contents of the user message.",
                "items": {
                  "oneOf": [
                    {
                      "title": "Text content part",
                      "type": [
                        "object"
                      ],
                      "required": [
                        "type",
                        "text"
                      ],
                      "properties": {
                        "type": {
                          "type": [
                            "string"
                          ],
                          "description": "The type of the content part."
                        },
                        "text": {
                          "type": [
                            "string"
                          ],
                          "description": "The text content."
                        }
                      }
                    },
                    {
                      "title": "Image content part",
                      "type": [
                        "object"
                      ],
                      "required": [
                        "type",
                        "image_url"
                      ],
                      "properties": {
                        "type": {
                          "type": [
                            "string"
                          ],
                          "description": "The type of the content part."
                        },
                        "image_url": {
                          "type": [
                            "object"
                          ],
                          "description": null
                        }
                      }
                    }
                  ]
                }
              },
              "role": {
                "type": [
                  "string"
                ],
                "description": "The role of the messages author, in this case user."
              },
              "name": {
                "type": [
                  "string"
                ],
                "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
              }
            }
          },
          {
            "title": "Assistant message",
            "type": [
              "object"
            ],
            "required": [
              "content",
              "role"
            ],
            "properties": {
              "content": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contents of the assistant message."
              },
              "role": {
                "type": [
                  "string"
                ],
                "description": "The role of the messages author, in this case assistant."
              },
              "name": {
                "type": [
                  "string"
                ],
                "description": "An optional name for the participant. Provides the model information to differentiate between participants of the same role."
              },
              "tool_calls": {
                "type": [
                  "array"
                ],
                "description": "The tool calls generated by the model, such as function calls.",
                "properties": {
                  "type": [
                    "object"
                  ],
                  "required": [
                    "id",
                    "type",
                    "function"
                  ],
                  "properties": {
                    "id": {
                      "type": [
                        "string"
                      ],
                      "description": "The ID of the tool call."
                    },
                    "type": {
                      "type": [
                        "string"
                      ],
                      "description": "The type of the tool. Currently, only function is supported."
                    },
                    "function": {
                      "type": [
                        "object"
                      ],
                      "description": "The function that the model called."
                    }
                  }
                }
              }
            }
          },
          {
            "title": "Tool message",
            "type": [
              "object"
            ],
            "required": [
              "role",
              "content",
              "tool_call_id"
            ],
            "properties": {
              "role": {
                "type": [
                  "string"
                ],
                "description": "The role of the messages author, in this case tool."
              },
              "content": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contents of the tool message."
              },
              "tool_call_id": {
                "type": [
                  "string"
                ],
                "description": "Tool call that this message is responding to."
              }
            }
          },
          {
            "title": "Function message",
            "type": [
              "object"
            ],
            "required": [
              "role",
              "content",
              "name"
            ],
            "properties": {
              "role": {
                "type": [
                  "string"
                ],
                "description": "The role of the messages author, in this case function."
              },
              "content": {
                "type": [
                  "string"
                ],
                "description": "The contents of the function message."
              },
              "name": {
                "type": [
                  "string"
                ],
                "description": "The name of the function to call."
              }
            }
          }
        ]
      }
    },
    "model": {
      "type": [
        "string"
      ],
      "description": "ID of the model to use. See the model endpoint compatibility table for details on which models work with the Chat API."
    },
    "frequency_penalty": {
      "type": [
        "number",
        "null"
      ],
      "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.\n\nSee more information about frequency and presence penalties.",
      "default": 0
    },
    "logit_bias": {
      "type": [
        "map"
      ],
      "description": "Modify the likelihood of specified tokens appearing in the completion.\n\nAccepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.",
      "default": null
    },
    "max_tokens": {
      "type": [
        "integer",
        "null"
      ],
      "description": "The maximum number of tokens to generate in the chat completion.\n\nThe total length of input tokens and generated tokens is limited by the model's context length. Example Python code for counting tokens."
    },
    "n": {
      "type": [
        "integer",
        "null"
      ],
      "description": "How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.",
      "default": 1
    },
    "presence_penalty": {
      "type": [
        "number",
        "null"
      ],
      "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.\n\nSee more information about frequency and presence penalties.",
      "default": 0
    },
    "response_format": {
      "type": [
        "object"
      ],
      "description": "An object specifying the format that the model must output.\n\nSetting to { \"type\": \"json_object\" } enables JSON mode, which guarantees the message the model generates is valid JSON.\n\nImportant: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly \"stuck\" request. Also note that the message content may be partially cut off if finish_reason=\"length\", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length."
    },
    "seed": {
      "type": [
        "integer",
        "null"
      ],
      "description": "This feature is in Beta. If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed, and you should refer to the system_fingerprint response parameter to monitor changes in the backend."
    },
    "stop": {
      "type": [
        "string",
        "array",
        "null"
      ],
      "description": "Up to 4 sequences where the API will stop generating further tokens.",
      "default": null
    },
    "stream": {
      "type": [
        "boolean",
        "null"
      ],
      "description": "If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message. Example Python code.",
      "default": false
    },
    "temperature": {
      "type": [
        "number",
        "null"
      ],
      "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\n\nWe generally recommend altering this or top_p but not both.",
      "default": 1
    },
    "top_p": {
      "type": [
        "number",
        "null"
      ],
      "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\n\nWe generally recommend altering this or temperature but not both.",
      "default": 1
    },
    "tools": {
      "type": [
        "array"
      ],
      "description": "A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for.",
      "properties": {
        "type": [
          "object"
        ],
        "required": [
          "type",
          "function"
        ],
        "properties": {
          "type": {
            "type": [
              "string"
            ],
            "description": "The type of the tool. Currently, only function is supported."
          },
          "function": {
            "type": [
              "object"
            ],
            "description": null
          }
        }
      }
    },
    "tool_choice": {
      "type": [
        "string",
        "object"
      ],
      "description": "Controls which (if any) function is called by the model. none means the model will not call a function and instead generates a message. auto means the model can pick between generating a message or calling a function. Specifying a particular function via {\"type: \"function\", \"function\": {\"name\": \"my_function\"}} forces the model to call that function.\n\nnone is the default when no functions are present. auto is the default if functions are present.",
      "properties": {
        "type": [
          "object"
        ],
        "required": [
          "type",
          "function"
        ],
        "properties": {
          "type": {
            "type": [
              "string"
            ],
            "description": "The type of the tool. Currently, only function is supported."
          },
          "function": {
            "type": [
              "object"
            ],
            "description": null
          }
        }
      }
    },
    "user": {
      "type": [
        "string"
      ],
      "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. Learn more."
    }
  }
}